name: Uppdatera Omr√•desparametrar & Str√∂mstyrka-bilder

on:
  schedule:
    - cron: '0 1 * * *'  # K√∂r kl 02:00 svensk tid varje natt (01:00 UTC)
  workflow_dispatch:     # M√∂jligg√∂r manuell k√∂rning

jobs:
  update-area-parameters:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Klona repo
        uses: actions/checkout@v3

      - name: üîß Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Installera beroenden
        run: npm ci

      - name: üåä K√∂r fetchAreaParametersExtended.ts
        env:
          DMI_API_KEY: ${{ secrets.DMI_API_KEY }}
        run: npx tsx scripts/fetchAreaParametersExtended.ts

      - name: üêç Setup Python f√∂r bildgeneration
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: üì¶ Installera Python-beroenden
        run: |
          pip install numpy matplotlib scipy shapely geojson argparse

      - name: üé® Generera str√∂mstyrka-bilder (alla 121)
        run: |
          python scripts/generate_current_magnitude_images.py \
            --max-images 121 \
            --resolution 2400 \
            --input public/data/area-parameters-extended.json.gz \
            --water-mask public/data/scandinavian-waters.geojson \
            --output-dir public/data/current-magnitude-images

      - name: üìä Kontrollera filstorlek
        run: |
          if [ -f "public/data/area-parameters-extended.json.gz" ]; then
            FILE_SIZE=$(stat -c%s "public/data/area-parameters-extended.json.gz")
            FILE_SIZE_MB=$((FILE_SIZE / 1024 / 1024))
            echo "Komprimerad filstorlek: ${FILE_SIZE_MB}MB"
            
            if [ $FILE_SIZE -gt 104857600 ]; then  # 100MB i bytes
              echo "‚ùå Fil √§r f√∂r stor (${FILE_SIZE_MB}MB > 100MB)"
              exit 1
            else
              echo "‚úÖ Filstorlek OK (${FILE_SIZE_MB}MB)"
            fi
          else
            echo "‚ùå Komprimerad fil hittades inte"
            exit 1
          fi
          
          # Kontrollera antal genererade bilder
          IMAGE_COUNT=$(find public/data/current-magnitude-images -name "*.png" | wc -l)
          echo "Genererade bilder: ${IMAGE_COUNT}"
          
          if [ $IMAGE_COUNT -lt 100 ]; then
            echo "‚ùå F√∂r f√• bilder genererade (${IMAGE_COUNT} < 100)"
            exit 1
          else
            echo "‚úÖ Bildgeneration OK (${IMAGE_COUNT} bilder)"
          fi

      - name: üîÑ Pusha uppdaterad data och bilder
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/data/area-parameters-extended.json.gz
          git add public/data/current-magnitude-images/
          git add src/lib/loadAreaParameters.ts
          
          # Kontrollera om det finns √§ndringar
          if git diff --staged --quiet; then
            echo "Inga √§ndringar att commita"
          else
            git commit -m "üåä Auto-uppdaterade omr√•desparametrar & str√∂mstyrka-bilder ($(date +'%Y-%m-%d %H:%M'))"
            git push
            echo "‚úÖ Data och bilder uppdaterade och pushade"
          fi

      - name: üìù Sammanfattning
        run: |
          echo "## üåä Omr√•desparametrar & Str√∂mstyrka-bilder uppdaterade" >> $GITHUB_STEP_SUMMARY
          echo "- **Tid**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Data-fil**: public/data/area-parameters-extended.json.gz" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "public/data/area-parameters-extended.json.gz" ]; then
            FILE_SIZE=$(stat -c%s "public/data/area-parameters-extended.json.gz")
            FILE_SIZE_MB=$((FILE_SIZE / 1024 / 1024))
            echo "- **Data-storlek**: ${FILE_SIZE_MB}MB (komprimerad)" >> $GITHUB_STEP_SUMMARY
          fi
          
          # R√§kna antal bilder
          IMAGE_COUNT=$(find public/data/current-magnitude-images -name "*.png" | wc -l)
          echo "- **Genererade bilder**: ${IMAGE_COUNT} str√∂mstyrka-bilder (1200x1200)" >> $GITHUB_STEP_SUMMARY
          echo "- **Bildmapp**: public/data/current-magnitude-images/" >> $GITHUB_STEP_SUMMARY
          
          echo "- **Status**: ‚úÖ Klart" >> $GITHUB_STEP_SUMMARY 